{{- if and .Values.database.postgres.enabled (eq .Values.database.type "postgres") }}
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.deployments.postgres.service.name }}
  namespace: {{ .Values.namespace }}
spec:
  ports:
    - name: postgres
      port: {{ .Values.deployments.postgres.service.port }}
      targetPort: {{ .Values.deployments.postgres.service.port }}
  selector:
    app: {{ .Values.deployments.postgres.service.name }}
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.deployments.postgres.service.name }}
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ .Values.deployments.postgres.service.name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Values.deployments.postgres.service.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.deployments.postgres.service.name }}
    spec:
      containers:
        - name: postgres
          image: {{ .Values.deployments.postgres.image.name }}
          env:
            - name: POSTGRES_DB
              value: {{ .Values.deployments.postgres.db.name }}
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.postgres.name }}
                  key: POSTGRES_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.postgres.name }}
                  key: POSTGRES_PASSWORD
          ports:
            - containerPort: {{ .Values.deployments.postgres.service.port }}
          volumeMounts:
            - name: {{ .Values.deployments.postgres.volume.name }}
              mountPath: {{ .Values.deployments.postgres.volume.path }}
      volumes:
        - name: {{ .Values.deployments.postgres.volume.name }}
          persistentVolumeClaim:
            claimName: {{ .Values.pvc.name }}
{{- end }}
